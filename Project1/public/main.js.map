{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/component/editor/editor.component.css","webpack:///./src/app/component/editor/editor.component.html","webpack:///./src/app/component/editor/editor.component.ts","webpack:///./src/app/component/new-problem/new-problem.component.css","webpack:///./src/app/component/new-problem/new-problem.component.html","webpack:///./src/app/component/new-problem/new-problem.component.ts","webpack:///./src/app/component/problem-detail/problem-detail.component.css","webpack:///./src/app/component/problem-detail/problem-detail.component.html","webpack:///./src/app/component/problem-detail/problem-detail.component.ts","webpack:///./src/app/component/problem-list/problem-list.component.css","webpack:///./src/app/component/problem-list/problem-list.component.html","webpack:///./src/app/component/problem-list/problem-list.component.ts","webpack:///./src/app/models/problems.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet><router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.routes';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './component/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './component/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './component/new-problem/new-problem.component';\nimport { EditorComponent } from './component/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent,\n  ],\n  imports: [\n    routing,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './component/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './component/problem-detail/problem-detail.component';\n\nconst route: Routes = [\n    {\n        path: '',\n        redirectTo: 'problems',\n        pathMatch: 'full'\n    },\n    {\n        path: 'problems',\n        component: ProblemListComponent\n    },\n    {\n        path: 'problems/:id',\n        component: ProblemDetailComponent\n    },\n    {\n        path: '**',\n        redirectTo: 'problems'\n    }\n];\n\nexport const routing = RouterModule.forRoot(route);","module.exports = \"@media screen {\\n    #editor{\\n        height: 600px;\\n    }\\n}\\n\\n/* .form-control {\\n    width: 100px;\\n    margin: 5px;\\n}\\n\\n.btn {\\n    margin: 5px;\\n} */\\n\\n@media screen {\\n    #editor {\\n        height: 600px;\\n    }\\n    .lang-select {\\n    width: 100px;\\n        margin-right: 10px;\\n    }\\n    header .btn {\\n        margin: 0 5px;\\n    }\\n    footer .btn {\\n        margin: 0 5px;\\n    }\\n    .editor-footer, .editor-header {\\n        margin: 10px 0;\\n    }\\n    .cursor {\\n        /*position:absolute;*/\\n        background: rgba(0, 250, 0, 0.5);\\n        z-index: 40;\\n        width: 2px !important;\\n    }\\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <!-- for select language-->\\n    <!-- when change, call setLanguage(language)-->\\n    <div class=\\\"row\\\">\\n      <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n        [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n          {{language}}\\n        </option>\\n      </select>\\n      <!--reset button -->\\n      <!-- Button trigger modal -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-\\n        target=\\\"#myModal\\\">\\n        Reset\\n      </button>\\n    </div>\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-\\n      labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-\\n            label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the editor, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-\\n              dismiss=\\\"modal\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n              (click)=\\\"resetEditor()\\\">Reset</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    </header>\\n      <div id=\\\"editor\\\">\\n    </div>\\n    <!-- This is the body -->\\n    <footer class=\\\"editor-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\"\\n        (click)=\\\"submit()\\\">Submit Solution</button>\\n    </footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { mapChildrenIntoArray } from '@angular/router/src/url_tree';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { ActivatedRoute, Params } from '@angular/router';\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  languages: string[] = [\"Java\", \"Python\"];\n  language: string = \"Java\";\n  editor: any;\n  sessionId: string;\n  defaultContent = {\n    \"Java\": `public class Example{\n          public static void main(String[] args){\n            //type your code here\n          }\n    }`,\n    \"Python\": `class Solution:\n          def example():\n            #write your python code here\n        `\n  };\n\n  constructor(private collaborationSocket: CollaborationService,\n                private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.route.params.\n      subscribe((params)=>{\n        this.sessionId = params['id'];\n        this.initEditor();\n      });\n  }\n  \n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    console.log(\"session + \" + this.sessionId + \" is activated\");\n    this.resetEditor();\n\n    document.getElementsByTagName(\"textarea\")[0].focus();\n    this.collaborationSocket.init(this.editor, this.sessionId);\n    this.collaborationSocket.restoreBuffer();\n    this.editor.lastAppliedChange = null;\n    this.editor.on('change', (e)=> {\n      console.log(\"editor changes:\" + JSON.stringify(e));\n      if(this.editor.lastAppliedChange != e){\n        this.collaborationSocket.change(JSON.stringify(e));\n      }\n    });\n  }\n\n  resetEditor():void{\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\n      \"ace/mode/\" + this.language.toLowerCase());\n  }\n\n  setLanguage(language: string): void{\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let user_code = this.editor.getValue();\n    console.log(user_code);\n  }\n\n}\n","module.exports = \".row {\\n    margin-bottom:10px; \\n}\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n        name=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n        [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n      name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n      [(ngModel)]=\\\"newProblem.desc\\\"> \\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n        [(ngModel)]=\\\"newProblem.difficulty\\\">\\n          <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n            {{difficulty}}\\n          </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n          (click)=\\\"addProblem()\\\">Add problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit} from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { PROBLEM } from '../../models/problem.model';\n\nconst ProblemModel = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"easy\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\n\n\nexport class NewProblemComponent implements OnInit {\n\n  newProblem: PROBLEM = Object.assign({}, ProblemModel);\n\n  difficulties = [\"easy\", \"medium\", \"hard\", \"super\"];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void{\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, ProblemModel);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\" *ngIf = \\\"problem\\\" >\\n  <div class=\\\"row\\\">\\n    <div class = \\\"col-sm-12 col-md-4\\\">\\n      <div>\\n          <h2>\\n            {{problem.id}}. {{problem.name}}\\n          </h2>\\n          <p>\\n            {{problem.desc}}\\n          </p>\\n      </div>\\n    </div>\\n    <div class=\\\"hidden-xs col-sm-12 col-md-8 \\\">\\n        <app-editor></app-editor>\\n    </div>\\n  </div>\\n</div> \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router'\nimport { DataService } from '../../services/data.service';\nimport { PROBLEM } from '../../models/problem.model';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: PROBLEM;\n\n  constructor(private dataService: DataService,\n                private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params)=>\n          this.dataService.getProblem(+params['id']).\n              then(problem => this.problem = problem));\n  }\n\n}\n","module.exports = \"\\n.difficult {\\n    min-width: 65px;\\n    margin-right: 18px; \\n}\\n\\n.badge.difficulty {\\n    padding-top: 0.6em;\\n    color: #fbfdfa;\\n    font-size: 12px;\\n    width: 60px;\\n    margin-right: 5px;\\n}\\n\\n.title {\\n    font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n    background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n    background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n    background-color: #dd8d1e;\\n}\\n\\n.diff-super{\\n    background-color: #8d16e2;\\n}\"","module.exports = \"<div class = \\\"container\\\">\\n  <div class = \\\"list-group\\\">\\n    <app-new-problem></app-new-problem>\\n    <a class = \\\"list-group-item\\\" *ngFor = \\\"let problem of problems\\\"\\n        [routerLink] = \\\"['/problems', problem.id]\\\">\\n      <span class = \\\"{{'pull-left badge difficulty diff-' + \\n          problem.difficulty.toLocaleLowerCase()}}\\\">\\n          {{problem.difficulty}}\\n      </span>\\n      <strong class = \\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PROBLEM } from '../../models/problem.model';\nimport { PROBLEMS } from '../../models/problems';\nimport { DataService } from '../../services/data.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problemSubscription: Subscription;\n\n  problems: PROBLEM[];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblem();\n  }\n\n  ngOnDestroy(){\n    this.problemSubscription.unsubscribe();\n  }\n\n  getProblem(): void{\n    this.problemSubscription = this.dataService.getProblems().\n            subscribe(problems=> this.problems = problems);\n  }\n\n}\n","import { PROBLEM } from \"./problem.model\";\n\nexport const PROBLEMS: PROBLEM[] = [\n    {\n        \"id\":1,\n        \"name\":\"Two Sum\",\n        \"desc\":`Given an array of integers, find two numbers such that they add up to\n        a specific target number.\\n\\nThe function twoSum should return indices of the two\n        numbers such that they add up to the target, where index1 must be less than\n        index2. Please note that your returned answers (both index1 and index2) are NOT\n        zero-based.`,\n        \"difficulty\":\"easy\"\n    },\n    {\n        \"id\":2,\n        \"name\":\"3Sum\",\n        \"desc\":`Given an array S of n integers, are there elements a, b, c in S such\n        that a + b + c = 0? Find all unique triplets in the array which gives the sum of\n        zero.`,\n        \"difficulty\":\"medium\"\n    },\n    {\n        \"id\":3,\n        \"name\":\"4Sum\",\n        \"desc\":`Given an array S of n integers, are there elements a, b, c, and d in\n        S such that a + b + c + d = target?\\n\\nFind all unique quadruplets in the array\n        which gives the sum of target.`,\n        \"difficulty\":\"medium\"\n    },{\n        \"id\":4,\n        \"name\":\"Triangle Count\",\n        \"desc\":`Given an array of integers, how many three numbers can be found in\n        the array, so that we can build an triangle whose three edges length is the three\n        numbers that we find?`,\n        \"difficulty\":\"hard\",\n    },\n    {\n        \"id\":5,\n        \"name\":\"Sliding Window Maximum\",\n        \"desc\":`Given an array of n integer with duplicate number, and a moving\n        window(size k), move the window at each iteration from the start of the array,\n        find the maximum number inside the window at each moving.`,\n        \"difficulty\":\"super\"\n    }\n];","import { Injectable } from '@angular/core';\ndeclare var io:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\n  collaborationSocket: any;\n  constructor() { }\n\n  init(editor: any, sessionId: string): void{\n    this.collaborationSocket = io(window.location.origin, {query : \"message=\" + sessionId});\n    this.collaborationSocket.on(\"change\", (delta)=>{\n      console.log(\"message received from server: \" + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit('change', delta);\n  }\n\n  restoreBuffer(): void{\n    this.collaborationSocket.emit('restoreBuffer');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PROBLEM } from '../models/problem.model';\nimport { PROBLEMS } from '../models/problems';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private _problemSource = new BehaviorSubject<PROBLEM[]>([]);\n  problems: PROBLEM[] = PROBLEMS;\n  problem: PROBLEM;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<PROBLEM[]> {\n    this.httpClient.get('api/v1/problems').\n          toPromise().\n          then((res:any)=>{\n            this._problemSource.next(res);\n          }).\n          catch(this.handleError);\n          return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<PROBLEM> {\n    return this.httpClient.get(`api/v1/problems/${id}`).\n          toPromise().\n          then((res:any)=>{\n            return res;\n          } ).\n          catch(this.handleError);\n  }\n\n  addProblem(problem: PROBLEM): void{\n    const options = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n    };\n    this.httpClient.post('api/v1/problems', problem, options).\n          toPromise().\n          then((res:any)=>{\n            return res;\n          }).\n          catch(this.handleError);\n  }\n  private handleError(err:any): Promise<any>{\n    console.error(\"An error occur at data.service \", err);\n    return Promise.reject(err.body|| err);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}